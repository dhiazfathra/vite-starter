name: Tests

on:
  push:
    branches: [ main, master ]
    paths:
      - 'src/**/*.ts'
      - 'src/**/*.tsx'
      - 'tests/**/*.ts'
      - 'tests/**/*.tsx'
      - 'package.json'
      - 'package-lock.json'
      - 'tsconfig.json'
      - 'vitest.config.ts'
      - '.github/workflows/test.yml'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'src/**/*.ts'
      - 'src/**/*.tsx'
      - 'tests/**/*.ts'
      - 'tests/**/*.tsx'
      - 'package.json'
      - 'package-lock.json'
      - 'tsconfig.json'
      - 'vitest.config.ts'
      - '.github/workflows/test.yml'

# Limit concurrent runs of the same workflow
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]
      # Fast fail is disabled to ensure we get results from all test jobs
      fail-fast: false

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1  # Shallow clone for faster checkout

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: npm ci
    - name: Run tests with coverage
      run: npm run test:cov

    # Vitest handles coverage thresholds in its configuration

    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: coverage-reports
        path: |
          ./coverage
        retention-days: 1

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1

    - name: Use Node.js 22.x
      uses: actions/setup-node@v4
      with:
        node-version: 22.x

    - name: Install dependencies
      run: npm ci
    - name: Build with bundle analysis
      run: npm run build

  upload-coverage:
    runs-on: ubuntu-latest
    needs: test
    # Skip this job for Dependabot PRs
    if: github.actor != 'dependabot[bot]'

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1

    - name: Download coverage reports
      uses: actions/download-artifact@v4
      with:
        name: coverage-reports

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      if: ${{ !cancelled() }}
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: ./coverage
        flags: unittests
        fail_ci_if_error: true
        verbose: true

    - name: Upload test results to Codecov
      uses: codecov/test-results-action@v1
      if: ${{ !cancelled() }}
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
